<?xml version="1.0"?>
<sod>

    <!-- *****************************  Event Arm  ***************************** -->
<eventArm>
    <fdsnEvent> <!-- default use USGS catalog -->
        <originTimeRange>
            <startTime>2013-01-01T00:00:00.000Z</startTime>
            <endTime>2014-12-31T00:00:00.000Z</endTime>
        </originTimeRange>
        <magnitudeRange>
			<min>5.0</min>
            <max>9.9</max>
        </magnitudeRange>
        <originDepthRange>
            <unit>KILOMETER</unit>
            <min>0</min>
			<max>2000</max>
        </originDepthRange>
    </fdsnEvent>
    <printlineEventProcess/>
	<CSVEventPrinter>
		<filename>event.csv</filename>
	</CSVEventPrinter>
</eventArm>


    <!--  **************************  Network Arm  *************************  *-->
    <networkArm>
        <fdsnStation>
            <!-- host for datacenter
                IRIS-DMC - service.iris.edu (default)
                IRIS-DMC's PH5 web services - service.iris.edu
                SCEDC - service.scedc.caltech.edu
                NCEDC - service.ncedc.org
                GEOFON - geofon.gfz-potsdam.de
		ETHZ - eida.ethz.ch
                ORFEUS - www.orfeus-eu.org   -->
		    <includeAvailability>false</includeAvailability>
		    <host>eida.ethz.ch</host>
		    <!--includeRestricted>true</includeRestricted-->
	    </fdsnStation>

        <!--  network subsetter  -->
        <networkCode>XA</networkCode>   

        <!--  station subsetter  -->
        <stationCode>*</stationCode>

        <!--  channel subsetter  -->
        <channelCode>HH*</channelCode>

        <sacPoleZeroWriter/>    <!--  print channel poles and zeros to file  -->
        <responseWriter/>       <!--  print channel responses to file  -->
        
        <printlineChannelProcess/>
    
    </networkArm>


    <!--  *****************************  Waveform Arm  *****************************  -->
    <waveformArm>

        <!--  request Generator subsetter  -->
        <distanceRange>	<!--  distance requset  -->
            <unit>DEGREE</unit>
            <min>84</min>
            <max>145</max>
        </distanceRange>

        <originOffsetRequest>	<!--  offset request  -->
            <beginOffset>
                <unit>SECOND</unit>
                <value>0</value>
            </beginOffset>
            <endOffset>
                <unit>SECOND</unit>
                <value>2100</value>
            </endOffset>
        </originOffsetRequest>

        <!--  seismogram source subtter  -->
        <fdsnDataSelect>
		    <host>eida.ethz.ch</host>
	    </fdsnDataSelect>

        <!--  avaiable Data subsetter  -->
        <someCoverage/>

        <!--  **********  Seismogram Process  ***********  -->
        <!--  check after asking for the seismograms taht they really exist  -->
        <someDataCoverage/>

        <!--  merge, deal with overlap and gap-->
        <merge/>
        <collapseOverlaps/>
        <gapFill><zeroFill/></gapFill>

        <!--  basic data processing  -->
        <rMean/>
        <rTrend/>
        <taper/>

        <!--  wirte raw data  -->
        <sacWriter>
             <workingDir>seismograms-raw</workingDir>
             <location>$event.getTime('yyyy.DDD.HH.mm.ss')/$event.getTime('yyyy.DDD.HH.mm.ss').${network.code}.${station.code}.${channel.code}.sac</location>
             <!-- set event depth from m to km  -->
             <sacHeaderScript type="jython">
                 from edu.sc.seis.seisFile.sac import SacConstants
                 h = sac.getHeader()
                 h.evdp = h.evdp/1000
             </sacHeaderScript>

         </sacWriter>
         <printlineSeismogramProcess/>
         <legacyExecute>
             <command>echo Sod saved this file</command>
         </legacyExecute>
         
         <!--  remove response, same as command in SAC:
               transfer from polezero subtype xyz to none freq 0.005 0.01 20 40  -->

         <transferResponse>
             <lowCut>0.005</lowCut>
             <lowPass>0.01</lowPass>
             <highPass>20</highPass>
             <highCut>40</highCut>
         </transferResponse>

         <!--  write data after removing response  -->
         <sacWriter>
             <workingDir>seismograms</workingDir>
             <location>$event.getTime('yyyy.DDD.HH.mm.ss')/$event.getTime('yyyy.DDD.HH.mm.ss').${network.code}.${station.code}.${channel.code}.sac</location>
             <!-- Set event depth in km instead of meters -->
            <sacHeaderScript type="jython">
                from edu.sc.seis.seisFile.sac import SacConstants
                h = sac.getHeader()
                h.evdp = h.evdp/1000
            </sacHeaderScript>

        </sacWriter>

        <printlineSeismogramProcess/>
        <legacyExecute>
            <command>echo Sod saved this file</command>
        </legacyExecute>
    
    </waveformArm>


</sod>
